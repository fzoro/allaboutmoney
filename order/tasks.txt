**** Customer - theoretically it's done

1 - Get by external id - OK
2 - Create customer - OK
3 - Update customer - OK


*** Order
1 - Get Order by external id - OK
    1.1 It should check new status on wirecard in case the order is not complete
    1.2 Expose data with Assembler ( https://docs.spring.io/spring-hateoas/docs/current/reference/html/#fundamentals.resource-assembler )

2 - Create Order
    2.1 - call wirecard to create the order and return the checkout link - OK
    2.2 - it should save in OrderVendor the response from vendor - OK


3 - expose an endpoint to be called by wirecard when the order is paid.

4 - Add tracer to entities and spring sleuth

5 - Write unit tests
    5.1 - write integration tests ( with wiremock and testcontainer)
    5.2 - write smoke tests (connect to sandbox)

6 - deploy as a docker container
